Proje 1

[22,27,16,2,18,6] -> Insertion Sort

Yukarı verilen dizinin sort türüne göre aşamalarını yazınız.

Manuel Cozum:

[22,27,16,2,18,6]
[6,27,16,2,18,22] --> 22 ve 6 yer degistirdi
[6,2,16,27,18,22] --> 27 ve 2 yer degistirdi.
[2,6,16,27,18,22] --> 2 ve 6 yer degistirdi.
[2,6,16,27,18,22] --> bu adimda herhangi bir degisiklik yapilmadi.
[2,6,16,18,27,22] --> 27 ve 18 yer degistirdi.
[2,6,16,18,22,27] --> 22 ve 27 yer degistirdi.

################################################################ 

Kod ile Cozum:

def insertion_sort(arr):
    for i in range(1, len(arr)):
        j = i
        while arr[j - 1] > arr[j] and j > 0:
           arr[j - 1], arr[j] = arr[j], arr[j - 1]
           j -= 1

arr = [22,27,16,2,18,6]
insertion_sort(arr)
print(arr)

################################################################ 

Big-O gösterimini yazınız.
Insertion sort'un Big-O notasyonu O(n^2)'dir.


Time Complexity: Dizi sıralandıktan sonra 18 sayısı aşağıdaki case'lerden hangisinin kapsamına girer? Yazınız.

Average case: Aradığımız sayının ortada olması (+) --> [2, 6, 16, 18, 22, 27] --> dizi siralandiktan sonra 18 sayisi dizinin ortasında kaldigi icin average case kapsamina girer.
Worst case: Aradığımız sayının sonda olması
Best case: Aradığımız sayının dizinin en başında olması.




[7,3,5,8,2,9,4,15,6] dizisinin Selection Sort'a göre ilk 4 adımını yazınız.

Manuel Cozum:

[7,3,5,8,2,9,4,15,6]
[2,3,5,8,7,9,4,15,6] --> 7 ve 2 yer degistirdi.
[2,3,5,8,7,9,4,15,6] --> 2'den sonra en kucuk deger 3 oldugu icin bu adimda herhangi bir degisiklik yapilmadi.
[2,3,4,8,7,9,5,15,6] --> 5 ve 4 yer degistirdi.
[2,3,4,5,6,9,8,15,7] --> 7 ve 6 yer degistirdi.
[2,3,4,5,6,7,8,15,9] --> 9 ve 7 yer degistirdi.
[2,3,4,5,6,7,8,15,9] --> 7'den sonra en kucuk deger 8 oldugu icin bu adimda herhangi bir degisiklik yapilmadi.
[2,3,4,5,6,7,8,9,15] --> 15 ve 9 yer degistirdi.

################################################################ 

Kod ile Cozum:

def selection_sort(arr):
    for i in range(0, len(arr) - 1): # --> we can skip the last index bc when "i" selection shot arrives this point it already finished bc there's nothing to compare to in.
        cur_min_index = i
        for j in range(i + 1, len(arr)):
            if arr[j] < arr[cur_min_index]:
                cur_min_index = j
        arr[i], arr[cur_min_index] = arr[cur_min_index], arr[i] #swap

arr = [7,3,5,8,2,9,4,15,6]
selection_sort(arr)
print(arr)






